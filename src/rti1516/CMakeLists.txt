# The directory containing the public api for rti1516
SET(RTI1516_HEADER_PATH ${CMAKE_SOURCE_DIR}/include/rti1516)
SET(RTI1516_DATA_PATH ${CMAKE_SOURCE_DIR}/share/rti1516)

# All the -I arguments
INCLUDE_DIRECTORIES(${RTI1516_HEADER_PATH})
# The OpenRTI implementation files and may be build generated sources
INCLUDE_DIRECTORIES(${CMAKE_BINARY_DIR}/src/OpenRTI)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/src/OpenRTI)

SET(RTI1516_PUBLIC_HEADERS
        ${RTI1516_HEADER_PATH}/RTI/Enums.h
        ${RTI1516_HEADER_PATH}/RTI/FederateAmbassador.h
        ${RTI1516_HEADER_PATH}/RTI/LogicalTimeFactory.h
        ${RTI1516_HEADER_PATH}/RTI/LogicalTimeInterval.h
        ${RTI1516_HEADER_PATH}/RTI/RangeBounds.h
        ${RTI1516_HEADER_PATH}/RTI/RTIambassadorFactory.h
        ${RTI1516_HEADER_PATH}/RTI/SpecificConfig.h
        ${RTI1516_HEADER_PATH}/RTI/VariableLengthData.h
        ${RTI1516_HEADER_PATH}/RTI/Exception.h
        ${RTI1516_HEADER_PATH}/RTI/Handle.h
        ${RTI1516_HEADER_PATH}/RTI/LogicalTime.h
        ${RTI1516_HEADER_PATH}/RTI/NullFederateAmbassador.h
        ${RTI1516_HEADER_PATH}/RTI/RTI1516.h
        ${RTI1516_HEADER_PATH}/RTI/RTIambassador.h
        ${RTI1516_HEADER_PATH}/RTI/Typedefs.h
)

SET(LIB_RTI1516_SOURCES
	Exception.cpp
	FederateAmbassador.cpp
	Handle.cpp
	LogicalTime.cpp
	LogicalTimeFactory.cpp
	LogicalTimeInterval.cpp
	NullFederateAmbassador.cpp
	RangeBounds.cpp
	RTIambassador.cpp
	RTIambassadorFactory.cpp
	RTIambassadorImplementation.cpp
	RTI1516LogicalTimeFactory.cpp
	VariableLengthData.cpp
	Version.cpp
)


SET(FEDTIME1516_PUBLIC_HEADERS
        ${RTI1516_HEADER_PATH}/RTI/HLAfloat64Interval.h
        ${RTI1516_HEADER_PATH}/RTI/HLAfloat64TimeFactory.h
        ${RTI1516_HEADER_PATH}/RTI/HLAfloat64Time.h
        ${RTI1516_HEADER_PATH}/RTI/HLAinteger64Interval.h
        ${RTI1516_HEADER_PATH}/RTI/HLAinteger64TimeFactory.h
        ${RTI1516_HEADER_PATH}/RTI/HLAinteger64Time.h
        ${RTI1516_HEADER_PATH}/RTI/RTI1516fedTime.h
)

SET(LIB_FEDTIME1516_SOURCES
        RTI1516fedTime.cpp
        HLAfloat64Interval.cpp
        HLAfloat64Time.cpp
        HLAfloat64TimeFactory.cpp
        HLAinteger64Interval.cpp
        HLAinteger64Time.cpp
        HLAinteger64TimeFactory.cpp
        LogicalTimeFactoryFactory.cpp
)

IF(OPENRTI_BUILD_SHARED)
  ADD_LIBRARY(rti1516 SHARED ${LIB_RTI1516_SOURCES})
  SET_PROPERTY(TARGET rti1516 APPEND PROPERTY COMPILE_DEFINITIONS BUILDING_RTI)
  SET_PROPERTY(TARGET rti1516 PROPERTY VERSION 1.0.0)
  SET_PROPERTY(TARGET rti1516 PROPERTY SOVERSION 1)

  # rti1516, the circular reference is tricky on win32
  IF(MSVC)
    ADD_LIBRARY(fedtime1516Stub STATIC ${LIB_FEDTIME1516_SOURCES})
    SET_PROPERTY(TARGET fedtime1516Stub APPEND PROPERTY COMPILE_DEFINITIONS BUILDING_FEDTIME)
    # Ideally we could use
    #  SET_PROPERTY(TARGET fedtime1516Stub APPEND PROPERTY STATIC_LIBRARY_FLAGS_DEBUG "/DEF /NAME:$<TARGET_FILE:fedtime1516>")
    # to get the final target file name as it is produced, but STATIC_LIBRARY_FLAGS does not evaluate generator expressions
    # So use different variants of CMAKE_<CONFIG>_POSTFIX
    OPENRTI_SET_MSVC_STUB_DLL_NAME(fedtime1516Stub fedtime1516)
    OPENRTI_TARGET_LINK_PRIVATE_LIBRARIES(rti1516 fedtime1516Stub OpenRTI)
  ELSEIF(MINGW OR CYGWIN)
    ADD_LIBRARY(fedtime1516Stub STATIC ${LIB_FEDTIME1516_SOURCES})
    SET_PROPERTY(TARGET fedtime1516Stub APPEND PROPERTY COMPILE_DEFINITIONS BUILDING_FEDTIME)
    STRING(TOUPPER ${CMAKE_BUILD_TYPE} _CONFIG)
    SET(_fedtimeDllName libfedtime1516${CMAKE_${_CONFIG}_POSTFIX}.dll)
    ADD_CUSTOM_COMMAND(TARGET fedtime1516Stub
      POST_BUILD
      COMMAND "${CMAKE_COMMAND}" -E remove -f ${_fedtimeDllName}.a
      COMMAND "${DLLTOOL}" -D${_fedtimeDllName} -l${_fedtimeDllName}.a $<TARGET_FILE:fedtime1516Stub>
      COMMAND "${CMAKE_COMMAND}" -E remove -f $<TARGET_FILE:fedtime1516Stub>
      COMMAND "${CMAKE_COMMAND}" -E rename ${_fedtimeDllName}.a $<TARGET_FILE:fedtime1516Stub>
      )
    OPENRTI_TARGET_LINK_PRIVATE_LIBRARIES(rti1516 fedtime1516Stub OpenRTI)
  ELSE()
    OPENRTI_TARGET_LINK_PRIVATE_LIBRARIES(rti1516 OpenRTI)
    IF(OPENRTI_INSTALL_WITH_RPATH)
      SET_PROPERTY(TARGET rti1516 PROPERTY INSTALL_RPATH "$ORIGIN")
      SET_PROPERTY(TARGET rti1516 APPEND PROPERTY LINK_FLAGS "${OPENRTI_RPATH_LINK_FLAGS}")
    ENDIF()
  ENDIF()
  IF(MACOS)
    SET_PROPERTY(TARGET rti1516 APPEND PROPERTY LINK_FLAGS "-Wl,-undefined,dynamic_lookup ${OPENRTI_BIND_AT_LOAD}")
  ENDIF()
ELSE()
  ADD_LIBRARY(rti1516 STATIC ${LIB_RTI1516_SOURCES})
  SET_PROPERTY(TARGET rti1516 APPEND PROPERTY COMPILE_DEFINITIONS STATIC_RTI STATIC_FEDTIME)
  SET_PROPERTY(TARGET rti1516 PROPERTY LINK_INTERFACE_MULTIPLICITY 2)
  OPENRTI_TARGET_POSITION_INDEPENDENT(rti1516)
  OPENRTI_TARGET_LINK_PRIVATE_LIBRARIES(rti1516 fedtime1516 OpenRTI)
ENDIF()

# libfedtime1516
IF(OPENRTI_BUILD_SHARED)
  ADD_LIBRARY(fedtime1516 SHARED ${LIB_FEDTIME1516_SOURCES})
  SET_PROPERTY(TARGET fedtime1516 APPEND PROPERTY COMPILE_DEFINITIONS BUILDING_FEDTIME)
  SET_PROPERTY(TARGET fedtime1516 PROPERTY VERSION 1.0.0)
  SET_PROPERTY(TARGET fedtime1516 PROPERTY SOVERSION 1)
  IF(OPENRTI_INSTALL_WITH_RPATH)
    SET_PROPERTY(TARGET fedtime1516 PROPERTY INSTALL_RPATH "$ORIGIN")
    SET_PROPERTY(TARGET fedtime1516 APPEND PROPERTY LINK_FLAGS "${OPENRTI_RPATH_LINK_FLAGS}")
  ENDIF()
ELSE()
  ADD_LIBRARY(fedtime1516 STATIC ${LIB_FEDTIME1516_SOURCES})
  SET_PROPERTY(TARGET fedtime1516 APPEND PROPERTY COMPILE_DEFINITIONS STATIC_RTI STATIC_FEDTIME)
  SET_PROPERTY(TARGET fedtime1516 PROPERTY LINK_INTERFACE_MULTIPLICITY 2)
  OPENRTI_TARGET_POSITION_INDEPENDENT(fedtime1516)
ENDIF()
OPENRTI_TARGET_LINK_PRIVATE_LIBRARIES(fedtime1516 rti1516 OpenRTI)

INSTALL(TARGETS fedtime1516 rti1516
  RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
  LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
  ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}")
INSTALL(FILES ${RTI1516_PUBLIC_HEADERS} ${FEDTIME1516_PUBLIC_HEADERS}
  DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/${OPENRTI_RTI1516_INCLUDE_SUBDIR}/RTI")
# INSTALL(FILES "${RTI1516_DATA_PATH}/hla.dtd"
#   DESTINATION "${OPENRTI_DATAROOTDIR}/rti1516")

IF(UNIX)
  INCLUDE(PkgConfig)
  CREATE_PKG_CONFIG(rti1516 "HLA/RTI 1516 Communication Library." "${OPENRTI_RTI1516_INCLUDE_SUBDIR}" "")
  CREATE_PKG_CONFIG(fedtime1516 "HLA/RTI 1516 Time Library." "${OPENRTI_RTI1516_INCLUDE_SUBDIR}" "")
  CREATE_API_PKG_CONFIG(hla-rti1516 "HLA/RTI 1516 Libraries." rti1516 fedtime1516)
ENDIF()
