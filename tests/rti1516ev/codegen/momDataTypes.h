
// Code automatically generated by T4 template from D:\vfs\CANoe\release\15.2\Projects_Source\OpenRTI-master\tests\rti1516ev\codegen\\mom.xml, do not edit

// Name: Standard MOM and Initialization Module (MIM) for HLA IEEE 1516-2010
// Version: 1.0
// Description: The MOM Object Classes and Interaction Classes of this object model may be extended.
// Purpose: Standard MOM and Initialization Module for HLA IEEE 1516-2010

#pragma once

#include <vector>
#include "RTI/encoding/HLAhandle.h"
#include "RTI/encoding/HLAopaqueData.h"

namespace OpenRTI {
namespace Mom {

class HLAinteractionSubscription;
class HLAobjectClassBasedCount;
class HLAinteractionCount;
class HLAsynchPointFederate;

typedef int32_t HLAcount;

typedef int32_t HLAseconds;

typedef int32_t HLAmsec;

// The type of the normalized value of a federate handle as returned by the Normalize Federate
//                Handle service. The value is appropriate for defining the range of the HLAfederate dimension for regions
//                with this dimension.
//             
typedef int32_t HLAnormalizedFederateHandle;

typedef int32_t HLAindex;

// Standardized 64 bit integer time
typedef int64_t HLAinteger64Time;

// Standardized 64 bit float time
typedef double HLAfloat64Time;

enum HLAfederateState : int32_t
{
      ActiveFederate = 1,
      FederateSaveInProgress = 3,
      FederateRestoreInProgress = 5,
}; // enum HLAfederateState

enum HLAtimeState : int32_t
{
      TimeGranted = 0,
      TimeAdvancing = 1,
}; // enum HLAtimeState

enum HLAownership : int32_t
{
      Unowned = 0,
      Owned = 1,
}; // enum HLAownership

enum HLAresignAction : int32_t
{
      DivestOwnership = 1,
      DeleteObjectInstances = 2,
      CancelPendingAcquisitions = 3,
      DeleteObjectInstancesThenDivestOwnership = 4,
      CancelPendingAcquisitionsThenDeleteObjectInstancesThenDivestOwnership = 5,
      NoAction = 6,
}; // enum HLAresignAction

enum HLAorderType : int32_t
{
      Receive = 0,
      TimeStamp = 1,
}; // enum HLAorderType

enum HLAswitch : int32_t
{
      Enabled = 1,
      Disabled = 0,
}; // enum HLAswitch

enum HLAsynchPointStatus : int32_t
{
      NoActivity = 0,
      AttemptingToRegisterSynchPoint = 1,
      MovingToSynchPoint = 2,
      WaitingForRestOfFederation = 3,
}; // enum HLAsynchPointStatus

enum HLAnormalizedServiceGroup : int32_t
{
      FederationManagement = 0,
      DeclarationManagement = 1,
      ObjectManagement = 2,
      OwnershipManagement = 3,
      TimeManagement = 4,
      DataDistributionManagement = 5,
      SupportServices = 6,
}; // enum HLAnormalizedServiceGroup

typedef std::wstring HLAtransportationName;

typedef std::wstring HLAupdateRateName;

// Interaction subscription information
class HLAinteractionSubscription
{
  public:
    virtual ~HLAinteractionSubscription() noexcept {}
    virtual uint32_t getVersion() const = 0;
    virtual void SetHLAinteractionClass(rti1516ev::HLAhandle value) = 0;
    virtual rti1516ev::HLAhandle GetHLAinteractionClass() const = 0;
    virtual bool IsHLAinteractionClassAvailable() const = 0;
    virtual void SetHLAactive(bool value) = 0;
    virtual bool GetHLAactive() const = 0;
    virtual bool IsHLAactiveAvailable() const = 0;

}; // class HLAinteractionSubscription

// Object class and count of associated items
class HLAobjectClassBasedCount
{
  public:
    virtual ~HLAobjectClassBasedCount() noexcept {}
    virtual uint32_t getVersion() const = 0;
    virtual void SetHLAobjectClass(rti1516ev::HLAhandle value) = 0;
    virtual rti1516ev::HLAhandle GetHLAobjectClass() const = 0;
    virtual bool IsHLAobjectClassAvailable() const = 0;
    virtual void SetHLAcount(HLAcount value) = 0;
    virtual HLAcount GetHLAcount() const = 0;
    virtual bool IsHLAcountAvailable() const = 0;

}; // class HLAobjectClassBasedCount

// Count of interactions of a class
class HLAinteractionCount
{
  public:
    virtual ~HLAinteractionCount() noexcept {}
    virtual uint32_t getVersion() const = 0;
    virtual void SetHLAinteractionClass(rti1516ev::HLAhandle value) = 0;
    virtual rti1516ev::HLAhandle GetHLAinteractionClass() const = 0;
    virtual bool IsHLAinteractionClassAvailable() const = 0;
    virtual void SetHLAinteractionCount(HLAcount value) = 0;
    virtual HLAcount GetHLAinteractionCount() const = 0;
    virtual bool IsHLAinteractionCountAvailable() const = 0;

}; // class HLAinteractionCount

// A particular joined federate and its synchronization point status
class HLAsynchPointFederate
{
  public:
    virtual ~HLAsynchPointFederate() noexcept {}
    virtual uint32_t getVersion() const = 0;
    virtual void SetHLAfederate(rti1516ev::HLAhandle value) = 0;
    virtual rti1516ev::HLAhandle GetHLAfederate() const = 0;
    virtual bool IsHLAfederateAvailable() const = 0;
    virtual void SetHLAfederateSynchStatus(HLAsynchPointStatus value) = 0;
    virtual HLAsynchPointStatus GetHLAfederateSynchStatus() const = 0;
    virtual bool IsHLAfederateSynchStatusAvailable() const = 0;

}; // class HLAsynchPointFederate


} // namespace OpenRTI
} // namespace Mom
