
// Code automatically generated by T4 template from D:\vfs\OpenRTI-codegen\tests\rti1516ev\codegen\\RTFederate.xml, do not edit
#pragma once

#include <vector>
#include <functional>

#include "RTI/encoding/HLAopaqueData.h"
#include "RTI/encoding/HLAhandle.h"
#include "RTFederateEncodings.h"

namespace NDistSimIB {
namespace NRTFederateEncoding {

class IHLAinteractionRoot;
class IHLAinteractionRootInteractionClass
{
  public:
    virtual void Publish() = 0;
    virtual void Unpublish() = 0;
    virtual void Subscribe() = 0;
    virtual void Unsubscribe() = 0;
};

class IMeasurementInit;
class IMeasurementInitInteractionClass
{
  public:
    virtual void Publish() = 0;
    virtual void Unpublish() = 0;
    virtual void Subscribe() = 0;
    virtual void Unsubscribe() = 0;
};

class IMeasurementStop;
class IMeasurementStopInteractionClass
{
  public:
    virtual void Publish() = 0;
    virtual void Unpublish() = 0;
    virtual void Subscribe() = 0;
    virtual void Unsubscribe() = 0;
};

class IKeyEvent;
class IKeyEventInteractionClass
{
  public:
    virtual void Publish() = 0;
    virtual void Unpublish() = 0;
    virtual void Subscribe() = 0;
    virtual void Unsubscribe() = 0;
};

class ITextLog;
class ITextLogInteractionClass
{
  public:
    virtual void Publish() = 0;
    virtual void Unpublish() = 0;
    virtual void Subscribe() = 0;
    virtual void Unsubscribe() = 0;
};

class IDOMemberTransmitData;
class IDOMemberTransmitDataInteractionClass
{
  public:
    virtual void Publish() = 0;
    virtual void Unpublish() = 0;
    virtual void Subscribe() = 0;
    virtual void Unsubscribe() = 0;
};

class ISystemVariableUpdate;
class ISystemVariableUpdateInteractionClass
{
  public:
    virtual void Publish() = 0;
    virtual void Unpublish() = 0;
    virtual void Subscribe() = 0;
    virtual void Unsubscribe() = 0;
};

class ISystemVariableModification;
class ISystemVariableModificationInteractionClass
{
  public:
    virtual void Publish() = 0;
    virtual void Unpublish() = 0;
    virtual void Subscribe() = 0;
    virtual void Unsubscribe() = 0;
};

class IValueEntityUpdate;
class IValueEntityUpdateInteractionClass
{
  public:
    virtual void Publish() = 0;
    virtual void Unpublish() = 0;
    virtual void Subscribe() = 0;
    virtual void Unsubscribe() = 0;
};

class IBusMessage;
class IBusMessageInteractionClass
{
  public:
    virtual void Publish() = 0;
    virtual void Unpublish() = 0;
    virtual void Subscribe() = 0;
    virtual void Unsubscribe() = 0;
};

class IEthPacket;
class IEthPacketInteractionClass
{
  public:
    virtual void Publish() = 0;
    virtual void Unpublish() = 0;
    virtual void Subscribe() = 0;
    virtual void Unsubscribe() = 0;
};

class IEthPacketError;
class IEthPacketErrorInteractionClass
{
  public:
    virtual void Publish() = 0;
    virtual void Unpublish() = 0;
    virtual void Subscribe() = 0;
    virtual void Unsubscribe() = 0;
};

class IEthPacketErrorForwarded;
class IEthPacketErrorForwardedInteractionClass
{
  public:
    virtual void Publish() = 0;
    virtual void Unpublish() = 0;
    virtual void Subscribe() = 0;
    virtual void Unsubscribe() = 0;
};

class IEthForwardedPacket;
class IEthForwardedPacketInteractionClass
{
  public:
    virtual void Publish() = 0;
    virtual void Unpublish() = 0;
    virtual void Subscribe() = 0;
    virtual void Unsubscribe() = 0;
};

class IEthStatus;
class IEthStatusInteractionClass
{
  public:
    virtual void Publish() = 0;
    virtual void Unpublish() = 0;
    virtual void Subscribe() = 0;
    virtual void Unsubscribe() = 0;
};

class ICANMessage;
class ICANMessageInteractionClass
{
  public:
    virtual void Publish() = 0;
    virtual void Unpublish() = 0;
    virtual void Subscribe() = 0;
    virtual void Unsubscribe() = 0;
};

class ICANErrorFrame;
class ICANErrorFrameInteractionClass
{
  public:
    virtual void Publish() = 0;
    virtual void Unpublish() = 0;
    virtual void Subscribe() = 0;
    virtual void Unsubscribe() = 0;
};

class IPythonCommand;
class IPythonCommandInteractionClass
{
  public:
    virtual void Publish() = 0;
    virtual void Unpublish() = 0;
    virtual void Subscribe() = 0;
    virtual void Unsubscribe() = 0;
};


class IInteractionClassRegistry
{
  public:
    virtual IHLAinteractionRootInteractionClass* getHLAinteractionRootInteractionClass() const = 0;
    virtual IMeasurementInitInteractionClass* getMeasurementInitInteractionClass() const = 0;
    virtual IMeasurementStopInteractionClass* getMeasurementStopInteractionClass() const = 0;
    virtual IKeyEventInteractionClass* getKeyEventInteractionClass() const = 0;
    virtual ITextLogInteractionClass* getTextLogInteractionClass() const = 0;
    virtual IDOMemberTransmitDataInteractionClass* getDOMemberTransmitDataInteractionClass() const = 0;
    virtual ISystemVariableUpdateInteractionClass* getSystemVariableUpdateInteractionClass() const = 0;
    virtual ISystemVariableModificationInteractionClass* getSystemVariableModificationInteractionClass() const = 0;
    virtual IValueEntityUpdateInteractionClass* getValueEntityUpdateInteractionClass() const = 0;
    virtual IBusMessageInteractionClass* getBusMessageInteractionClass() const = 0;
    virtual IEthPacketInteractionClass* getEthPacketInteractionClass() const = 0;
    virtual IEthPacketErrorInteractionClass* getEthPacketErrorInteractionClass() const = 0;
    virtual IEthPacketErrorForwardedInteractionClass* getEthPacketErrorForwardedInteractionClass() const = 0;
    virtual IEthForwardedPacketInteractionClass* getEthForwardedPacketInteractionClass() const = 0;
    virtual IEthStatusInteractionClass* getEthStatusInteractionClass() const = 0;
    virtual ICANMessageInteractionClass* getCANMessageInteractionClass() const = 0;
    virtual ICANErrorFrameInteractionClass* getCANErrorFrameInteractionClass() const = 0;
    virtual IPythonCommandInteractionClass* getPythonCommandInteractionClass() const = 0;
  protected:
    virtual ~IInteractionClassRegistry() {}
}; // class IInteractionClassRegistry

IInteractionClassRegistry* GetInteractionClassRegistry();

} // namespace NDistSimIB
} // namespace NRTFederateEncoding
