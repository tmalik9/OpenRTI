
// Code automatically generated by T4 template from D:\vfs\OpenRTI-codegen\tests\rti1516ev\codegen\\mom.xml, do not edit
#pragma once

#include <vector>
#include "RTI/encoding/HLAhandle.h"

namespace OpenRTI {
namespace Mom {
HLAobjectRoot::HLAobjectRoot
{
}

// attribute HLAprivilegeToDeleteObject : HLAtoken
std::vector<uint8_t> GetHLAprivilegeToDeleteObject() const
{
  return mHLAprivilegeToDeleteObjectEncoder.get();
}
void SetHLAprivilegeToDeleteObject(std::vector<uint8_t> newValue);
{
  mHLAprivilegeToDeleteObjectEncoder.set(newValue);
}

HLAmanager::HLAmanager
{
}


HLAfederate::HLAfederate
{
}

// attribute HLAfederateHandle : HLAhandle
rti1516ev::HLAhandle GetHLAfederateHandle() const
{
  return mHLAfederateHandleEncoder.get();
}
void SetHLAfederateHandle(rti1516ev::HLAhandle newValue);
{
  mHLAfederateHandleEncoder.set(newValue);
}
// attribute HLAfederateName : HLAunicodeString
std::wstring GetHLAfederateName() const
{
  return mHLAfederateNameEncoder.get();
}
void SetHLAfederateName(std::wstring newValue);
{
  mHLAfederateNameEncoder.set(newValue);
}
// attribute HLAfederateType : HLAunicodeString
std::wstring GetHLAfederateType() const
{
  return mHLAfederateTypeEncoder.get();
}
void SetHLAfederateType(std::wstring newValue);
{
  mHLAfederateTypeEncoder.set(newValue);
}
// attribute HLAfederateHost : HLAunicodeString
std::wstring GetHLAfederateHost() const
{
  return mHLAfederateHostEncoder.get();
}
void SetHLAfederateHost(std::wstring newValue);
{
  mHLAfederateHostEncoder.set(newValue);
}
// attribute HLARTIversion : HLAunicodeString
std::wstring GetHLARTIversion() const
{
  return mHLARTIversionEncoder.get();
}
void SetHLARTIversion(std::wstring newValue);
{
  mHLARTIversionEncoder.set(newValue);
}
// attribute HLAFOMmoduleDesignatorList : HLAmoduleDesignatorList
std::vector<std::wstring> GetHLAFOMmoduleDesignatorList() const
{
  return mHLAFOMmoduleDesignatorListEncoder.get();
}
void SetHLAFOMmoduleDesignatorList(std::vector<std::wstring> newValue);
{
  mHLAFOMmoduleDesignatorListEncoder.set(newValue);
}
// attribute HLAtimeConstrained : HLAboolean
bool GetHLAtimeConstrained() const
{
  return mHLAtimeConstrainedEncoder.get();
}
void SetHLAtimeConstrained(bool newValue);
{
  mHLAtimeConstrainedEncoder.set(newValue);
}
// attribute HLAtimeRegulating : HLAboolean
bool GetHLAtimeRegulating() const
{
  return mHLAtimeRegulatingEncoder.get();
}
void SetHLAtimeRegulating(bool newValue);
{
  mHLAtimeRegulatingEncoder.set(newValue);
}
// attribute HLAasynchronousDelivery : HLAboolean
bool GetHLAasynchronousDelivery() const
{
  return mHLAasynchronousDeliveryEncoder.get();
}
void SetHLAasynchronousDelivery(bool newValue);
{
  mHLAasynchronousDeliveryEncoder.set(newValue);
}
// attribute HLAfederateState : HLAfederateState
HLAfederateState GetHLAfederateState() const
{
  return mHLAfederateStateEncoder.get();
}
void SetHLAfederateState(HLAfederateState newValue);
{
  mHLAfederateStateEncoder.set(newValue);
}
// attribute HLAtimeManagerState : HLAtimeState
HLAtimeState GetHLAtimeManagerState() const
{
  return mHLAtimeManagerStateEncoder.get();
}
void SetHLAtimeManagerState(HLAtimeState newValue);
{
  mHLAtimeManagerStateEncoder.set(newValue);
}
// attribute HLAlogicalTime : HLAlogicalTime
std::vector<uint8_t> GetHLAlogicalTime() const
{
  return mHLAlogicalTimeEncoder.get();
}
void SetHLAlogicalTime(std::vector<uint8_t> newValue);
{
  mHLAlogicalTimeEncoder.set(newValue);
}
// attribute HLAlookahead : HLAtimeInterval
std::vector<uint8_t> GetHLAlookahead() const
{
  return mHLAlookaheadEncoder.get();
}
void SetHLAlookahead(std::vector<uint8_t> newValue);
{
  mHLAlookaheadEncoder.set(newValue);
}
// attribute HLAGALT : HLAlogicalTime
std::vector<uint8_t> GetHLAGALT() const
{
  return mHLAGALTEncoder.get();
}
void SetHLAGALT(std::vector<uint8_t> newValue);
{
  mHLAGALTEncoder.set(newValue);
}
// attribute HLALITS : HLAlogicalTime
std::vector<uint8_t> GetHLALITS() const
{
  return mHLALITSEncoder.get();
}
void SetHLALITS(std::vector<uint8_t> newValue);
{
  mHLALITSEncoder.set(newValue);
}
// attribute HLAROlength : HLAcount
HLAcount GetHLAROlength() const
{
  return mHLAROlengthEncoder.get();
}
void SetHLAROlength(HLAcount newValue);
{
  mHLAROlengthEncoder.set(newValue);
}
// attribute HLATSOlength : HLAcount
HLAcount GetHLATSOlength() const
{
  return mHLATSOlengthEncoder.get();
}
void SetHLATSOlength(HLAcount newValue);
{
  mHLATSOlengthEncoder.set(newValue);
}
// attribute HLAreflectionsReceived : HLAcount
HLAcount GetHLAreflectionsReceived() const
{
  return mHLAreflectionsReceivedEncoder.get();
}
void SetHLAreflectionsReceived(HLAcount newValue);
{
  mHLAreflectionsReceivedEncoder.set(newValue);
}
// attribute HLAupdatesSent : HLAcount
HLAcount GetHLAupdatesSent() const
{
  return mHLAupdatesSentEncoder.get();
}
void SetHLAupdatesSent(HLAcount newValue);
{
  mHLAupdatesSentEncoder.set(newValue);
}
// attribute HLAinteractionsReceived : HLAcount
HLAcount GetHLAinteractionsReceived() const
{
  return mHLAinteractionsReceivedEncoder.get();
}
void SetHLAinteractionsReceived(HLAcount newValue);
{
  mHLAinteractionsReceivedEncoder.set(newValue);
}
// attribute HLAinteractionsSent : HLAcount
HLAcount GetHLAinteractionsSent() const
{
  return mHLAinteractionsSentEncoder.get();
}
void SetHLAinteractionsSent(HLAcount newValue);
{
  mHLAinteractionsSentEncoder.set(newValue);
}
// attribute HLAobjectInstancesThatCanBeDeleted : HLAcount
HLAcount GetHLAobjectInstancesThatCanBeDeleted() const
{
  return mHLAobjectInstancesThatCanBeDeletedEncoder.get();
}
void SetHLAobjectInstancesThatCanBeDeleted(HLAcount newValue);
{
  mHLAobjectInstancesThatCanBeDeletedEncoder.set(newValue);
}
// attribute HLAobjectInstancesUpdated : HLAcount
HLAcount GetHLAobjectInstancesUpdated() const
{
  return mHLAobjectInstancesUpdatedEncoder.get();
}
void SetHLAobjectInstancesUpdated(HLAcount newValue);
{
  mHLAobjectInstancesUpdatedEncoder.set(newValue);
}
// attribute HLAobjectInstancesReflected : HLAcount
HLAcount GetHLAobjectInstancesReflected() const
{
  return mHLAobjectInstancesReflectedEncoder.get();
}
void SetHLAobjectInstancesReflected(HLAcount newValue);
{
  mHLAobjectInstancesReflectedEncoder.set(newValue);
}
// attribute HLAobjectInstancesDeleted : HLAcount
HLAcount GetHLAobjectInstancesDeleted() const
{
  return mHLAobjectInstancesDeletedEncoder.get();
}
void SetHLAobjectInstancesDeleted(HLAcount newValue);
{
  mHLAobjectInstancesDeletedEncoder.set(newValue);
}
// attribute HLAobjectInstancesRemoved : HLAcount
HLAcount GetHLAobjectInstancesRemoved() const
{
  return mHLAobjectInstancesRemovedEncoder.get();
}
void SetHLAobjectInstancesRemoved(HLAcount newValue);
{
  mHLAobjectInstancesRemovedEncoder.set(newValue);
}
// attribute HLAobjectInstancesRegistered : HLAcount
HLAcount GetHLAobjectInstancesRegistered() const
{
  return mHLAobjectInstancesRegisteredEncoder.get();
}
void SetHLAobjectInstancesRegistered(HLAcount newValue);
{
  mHLAobjectInstancesRegisteredEncoder.set(newValue);
}
// attribute HLAobjectInstancesDiscovered : HLAcount
HLAcount GetHLAobjectInstancesDiscovered() const
{
  return mHLAobjectInstancesDiscoveredEncoder.get();
}
void SetHLAobjectInstancesDiscovered(HLAcount newValue);
{
  mHLAobjectInstancesDiscoveredEncoder.set(newValue);
}
// attribute HLAtimeGrantedTime : HLAmsec
HLAmsec GetHLAtimeGrantedTime() const
{
  return mHLAtimeGrantedTimeEncoder.get();
}
void SetHLAtimeGrantedTime(HLAmsec newValue);
{
  mHLAtimeGrantedTimeEncoder.set(newValue);
}
// attribute HLAtimeAdvancingTime : HLAmsec
HLAmsec GetHLAtimeAdvancingTime() const
{
  return mHLAtimeAdvancingTimeEncoder.get();
}
void SetHLAtimeAdvancingTime(HLAmsec newValue);
{
  mHLAtimeAdvancingTimeEncoder.set(newValue);
}
// attribute HLAconveyRegionDesignatorSets : HLAswitch
HLAswitch GetHLAconveyRegionDesignatorSets() const
{
  return mHLAconveyRegionDesignatorSetsEncoder.get();
}
void SetHLAconveyRegionDesignatorSets(HLAswitch newValue);
{
  mHLAconveyRegionDesignatorSetsEncoder.set(newValue);
}
// attribute HLAconveyProducingFederate : HLAswitch
HLAswitch GetHLAconveyProducingFederate() const
{
  return mHLAconveyProducingFederateEncoder.get();
}
void SetHLAconveyProducingFederate(HLAswitch newValue);
{
  mHLAconveyProducingFederateEncoder.set(newValue);
}

HLAfederation::HLAfederation
{
}

// attribute HLAfederationName : HLAunicodeString
std::wstring GetHLAfederationName() const
{
  return mHLAfederationNameEncoder.get();
}
void SetHLAfederationName(std::wstring newValue);
{
  mHLAfederationNameEncoder.set(newValue);
}
// attribute HLAfederatesInFederation : HLAhandleList
std::vector<rti1516ev::HLAhandle> GetHLAfederatesInFederation() const
{
  return mHLAfederatesInFederationEncoder.get();
}
void SetHLAfederatesInFederation(std::vector<rti1516ev::HLAhandle> newValue);
{
  mHLAfederatesInFederationEncoder.set(newValue);
}
// attribute HLARTIversion : HLAunicodeString
std::wstring GetHLARTIversion() const
{
  return mHLARTIversionEncoder.get();
}
void SetHLARTIversion(std::wstring newValue);
{
  mHLARTIversionEncoder.set(newValue);
}
// attribute HLAMIMdesignator : HLAunicodeString
std::wstring GetHLAMIMdesignator() const
{
  return mHLAMIMdesignatorEncoder.get();
}
void SetHLAMIMdesignator(std::wstring newValue);
{
  mHLAMIMdesignatorEncoder.set(newValue);
}
// attribute HLAFOMmoduleDesignatorList : HLAmoduleDesignatorList
std::vector<std::wstring> GetHLAFOMmoduleDesignatorList() const
{
  return mHLAFOMmoduleDesignatorListEncoder.get();
}
void SetHLAFOMmoduleDesignatorList(std::vector<std::wstring> newValue);
{
  mHLAFOMmoduleDesignatorListEncoder.set(newValue);
}
// attribute HLAcurrentFDD : HLAunicodeString
std::wstring GetHLAcurrentFDD() const
{
  return mHLAcurrentFDDEncoder.get();
}
void SetHLAcurrentFDD(std::wstring newValue);
{
  mHLAcurrentFDDEncoder.set(newValue);
}
// attribute HLAtimeImplementationName : HLAunicodeString
std::wstring GetHLAtimeImplementationName() const
{
  return mHLAtimeImplementationNameEncoder.get();
}
void SetHLAtimeImplementationName(std::wstring newValue);
{
  mHLAtimeImplementationNameEncoder.set(newValue);
}
// attribute HLAlastSaveName : HLAunicodeString
std::wstring GetHLAlastSaveName() const
{
  return mHLAlastSaveNameEncoder.get();
}
void SetHLAlastSaveName(std::wstring newValue);
{
  mHLAlastSaveNameEncoder.set(newValue);
}
// attribute HLAlastSaveTime : HLAlogicalTime
std::vector<uint8_t> GetHLAlastSaveTime() const
{
  return mHLAlastSaveTimeEncoder.get();
}
void SetHLAlastSaveTime(std::vector<uint8_t> newValue);
{
  mHLAlastSaveTimeEncoder.set(newValue);
}
// attribute HLAnextSaveName : HLAunicodeString
std::wstring GetHLAnextSaveName() const
{
  return mHLAnextSaveNameEncoder.get();
}
void SetHLAnextSaveName(std::wstring newValue);
{
  mHLAnextSaveNameEncoder.set(newValue);
}
// attribute HLAnextSaveTime : HLAlogicalTime
std::vector<uint8_t> GetHLAnextSaveTime() const
{
  return mHLAnextSaveTimeEncoder.get();
}
void SetHLAnextSaveTime(std::vector<uint8_t> newValue);
{
  mHLAnextSaveTimeEncoder.set(newValue);
}
// attribute HLAautoProvide : HLAswitch
HLAswitch GetHLAautoProvide() const
{
  return mHLAautoProvideEncoder.get();
}
void SetHLAautoProvide(HLAswitch newValue);
{
  mHLAautoProvideEncoder.set(newValue);
}

 

} // namespace OpenRTI
} // namespace Mom
