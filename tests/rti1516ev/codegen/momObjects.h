
// Code automatically generated by T4 template from D:\vfs\OpenRTI-codegen\tests\rti1516ev\codegen\\mom.xml, do not edit
#pragma once

#include <vector>
#include "RTI/encoding/HLAhandle.h"

namespace OpenRTI {
namespace Mom {
class HLAobjectRoot
{
  public:
    HLAobjectRoot();
    ~HLAobjectRoot() = default;
    HLAobjectRoot(const HLAobjectRoot&) = delete;
    HLAobjectRoot(HLAobjectRoot&&) = delete;
    HLAobjectRoot& operator=(const HLAobjectRoot&) = delete;
    HLAobjectRoot& operator=(HLAobjectRoot&&) = delete;

    // attribute HLAprivilegeToDeleteObject : HLAtoken
    std::vector<uint8_t> GetHLAprivilegeToDeleteObject() const;
    void SetHLAprivilegeToDeleteObject(std::vector<uint8_t> newValue);
  private:
    // attribute HLAprivilegeToDeleteObject : HLAtoken
    HLAtokenEncoding mHLAprivilegeToDeleteObjectEncoder;
};

class HLAmanager : public HLAobjectRoot
{
  public:
    HLAmanager();
    ~HLAmanager() = default;
    HLAmanager(const HLAmanager&) = delete;
    HLAmanager(HLAmanager&&) = delete;
    HLAmanager& operator=(const HLAmanager&) = delete;
    HLAmanager& operator=(HLAmanager&&) = delete;

  private:
};

class HLAfederate : public HLAmanager
{
  public:
    HLAfederate();
    ~HLAfederate() = default;
    HLAfederate(const HLAfederate&) = delete;
    HLAfederate(HLAfederate&&) = delete;
    HLAfederate& operator=(const HLAfederate&) = delete;
    HLAfederate& operator=(HLAfederate&&) = delete;

    // attribute HLAfederateHandle : HLAhandle
    rti1516ev::HLAhandle GetHLAfederateHandle() const;
    void SetHLAfederateHandle(rti1516ev::HLAhandle newValue);
    // attribute HLAfederateName : HLAunicodeString
    std::wstring GetHLAfederateName() const;
    void SetHLAfederateName(std::wstring newValue);
    // attribute HLAfederateType : HLAunicodeString
    std::wstring GetHLAfederateType() const;
    void SetHLAfederateType(std::wstring newValue);
    // attribute HLAfederateHost : HLAunicodeString
    std::wstring GetHLAfederateHost() const;
    void SetHLAfederateHost(std::wstring newValue);
    // attribute HLARTIversion : HLAunicodeString
    std::wstring GetHLARTIversion() const;
    void SetHLARTIversion(std::wstring newValue);
    // attribute HLAFOMmoduleDesignatorList : HLAmoduleDesignatorList
    std::vector<std::wstring> GetHLAFOMmoduleDesignatorList() const;
    void SetHLAFOMmoduleDesignatorList(std::vector<std::wstring> newValue);
    // attribute HLAtimeConstrained : HLAboolean
    bool GetHLAtimeConstrained() const;
    void SetHLAtimeConstrained(bool newValue);
    // attribute HLAtimeRegulating : HLAboolean
    bool GetHLAtimeRegulating() const;
    void SetHLAtimeRegulating(bool newValue);
    // attribute HLAasynchronousDelivery : HLAboolean
    bool GetHLAasynchronousDelivery() const;
    void SetHLAasynchronousDelivery(bool newValue);
    // attribute HLAfederateState : HLAfederateState
    HLAfederateState GetHLAfederateState() const;
    void SetHLAfederateState(HLAfederateState newValue);
    // attribute HLAtimeManagerState : HLAtimeState
    HLAtimeState GetHLAtimeManagerState() const;
    void SetHLAtimeManagerState(HLAtimeState newValue);
    // attribute HLAlogicalTime : HLAlogicalTime
    std::vector<uint8_t> GetHLAlogicalTime() const;
    void SetHLAlogicalTime(std::vector<uint8_t> newValue);
    // attribute HLAlookahead : HLAtimeInterval
    std::vector<uint8_t> GetHLAlookahead() const;
    void SetHLAlookahead(std::vector<uint8_t> newValue);
    // attribute HLAGALT : HLAlogicalTime
    std::vector<uint8_t> GetHLAGALT() const;
    void SetHLAGALT(std::vector<uint8_t> newValue);
    // attribute HLALITS : HLAlogicalTime
    std::vector<uint8_t> GetHLALITS() const;
    void SetHLALITS(std::vector<uint8_t> newValue);
    // attribute HLAROlength : HLAcount
    HLAcount GetHLAROlength() const;
    void SetHLAROlength(HLAcount newValue);
    // attribute HLATSOlength : HLAcount
    HLAcount GetHLATSOlength() const;
    void SetHLATSOlength(HLAcount newValue);
    // attribute HLAreflectionsReceived : HLAcount
    HLAcount GetHLAreflectionsReceived() const;
    void SetHLAreflectionsReceived(HLAcount newValue);
    // attribute HLAupdatesSent : HLAcount
    HLAcount GetHLAupdatesSent() const;
    void SetHLAupdatesSent(HLAcount newValue);
    // attribute HLAinteractionsReceived : HLAcount
    HLAcount GetHLAinteractionsReceived() const;
    void SetHLAinteractionsReceived(HLAcount newValue);
    // attribute HLAinteractionsSent : HLAcount
    HLAcount GetHLAinteractionsSent() const;
    void SetHLAinteractionsSent(HLAcount newValue);
    // attribute HLAobjectInstancesThatCanBeDeleted : HLAcount
    HLAcount GetHLAobjectInstancesThatCanBeDeleted() const;
    void SetHLAobjectInstancesThatCanBeDeleted(HLAcount newValue);
    // attribute HLAobjectInstancesUpdated : HLAcount
    HLAcount GetHLAobjectInstancesUpdated() const;
    void SetHLAobjectInstancesUpdated(HLAcount newValue);
    // attribute HLAobjectInstancesReflected : HLAcount
    HLAcount GetHLAobjectInstancesReflected() const;
    void SetHLAobjectInstancesReflected(HLAcount newValue);
    // attribute HLAobjectInstancesDeleted : HLAcount
    HLAcount GetHLAobjectInstancesDeleted() const;
    void SetHLAobjectInstancesDeleted(HLAcount newValue);
    // attribute HLAobjectInstancesRemoved : HLAcount
    HLAcount GetHLAobjectInstancesRemoved() const;
    void SetHLAobjectInstancesRemoved(HLAcount newValue);
    // attribute HLAobjectInstancesRegistered : HLAcount
    HLAcount GetHLAobjectInstancesRegistered() const;
    void SetHLAobjectInstancesRegistered(HLAcount newValue);
    // attribute HLAobjectInstancesDiscovered : HLAcount
    HLAcount GetHLAobjectInstancesDiscovered() const;
    void SetHLAobjectInstancesDiscovered(HLAcount newValue);
    // attribute HLAtimeGrantedTime : HLAmsec
    HLAmsec GetHLAtimeGrantedTime() const;
    void SetHLAtimeGrantedTime(HLAmsec newValue);
    // attribute HLAtimeAdvancingTime : HLAmsec
    HLAmsec GetHLAtimeAdvancingTime() const;
    void SetHLAtimeAdvancingTime(HLAmsec newValue);
    // attribute HLAconveyRegionDesignatorSets : HLAswitch
    HLAswitch GetHLAconveyRegionDesignatorSets() const;
    void SetHLAconveyRegionDesignatorSets(HLAswitch newValue);
    // attribute HLAconveyProducingFederate : HLAswitch
    HLAswitch GetHLAconveyProducingFederate() const;
    void SetHLAconveyProducingFederate(HLAswitch newValue);
  private:
    // attribute HLAfederateHandle : HLAhandle
    rti1516ev::HLAhandle mHLAfederateHandleEncoder;
    // attribute HLAfederateName : HLAunicodeString
    rti1516ev::HLAunicodeString mHLAfederateNameEncoder;
    // attribute HLAfederateType : HLAunicodeString
    rti1516ev::HLAunicodeString mHLAfederateTypeEncoder;
    // attribute HLAfederateHost : HLAunicodeString
    rti1516ev::HLAunicodeString mHLAfederateHostEncoder;
    // attribute HLARTIversion : HLAunicodeString
    rti1516ev::HLAunicodeString mHLARTIversionEncoder;
    // attribute HLAFOMmoduleDesignatorList : HLAmoduleDesignatorList
    HLAmoduleDesignatorListEncoding mHLAFOMmoduleDesignatorListEncoder;
    // attribute HLAtimeConstrained : HLAboolean
    rti1516ev::HLAboolean mHLAtimeConstrainedEncoder;
    // attribute HLAtimeRegulating : HLAboolean
    rti1516ev::HLAboolean mHLAtimeRegulatingEncoder;
    // attribute HLAasynchronousDelivery : HLAboolean
    rti1516ev::HLAboolean mHLAasynchronousDeliveryEncoder;
    // attribute HLAfederateState : HLAfederateState
    rti1516ev::HLAinteger32BE mHLAfederateStateEncoder;
    // attribute HLAtimeManagerState : HLAtimeState
    rti1516ev::HLAinteger32BE mHLAtimeManagerStateEncoder;
    // attribute HLAlogicalTime : HLAlogicalTime
    HLAlogicalTimeEncoding mHLAlogicalTimeEncoder;
    // attribute HLAlookahead : HLAtimeInterval
    HLAtimeIntervalEncoding mHLAlookaheadEncoder;
    // attribute HLAGALT : HLAlogicalTime
    HLAlogicalTimeEncoding mHLAGALTEncoder;
    // attribute HLALITS : HLAlogicalTime
    HLAlogicalTimeEncoding mHLALITSEncoder;
    // attribute HLAROlength : HLAcount
    rti1516ev::HLAinteger32BE mHLAROlengthEncoder;
    // attribute HLATSOlength : HLAcount
    rti1516ev::HLAinteger32BE mHLATSOlengthEncoder;
    // attribute HLAreflectionsReceived : HLAcount
    rti1516ev::HLAinteger32BE mHLAreflectionsReceivedEncoder;
    // attribute HLAupdatesSent : HLAcount
    rti1516ev::HLAinteger32BE mHLAupdatesSentEncoder;
    // attribute HLAinteractionsReceived : HLAcount
    rti1516ev::HLAinteger32BE mHLAinteractionsReceivedEncoder;
    // attribute HLAinteractionsSent : HLAcount
    rti1516ev::HLAinteger32BE mHLAinteractionsSentEncoder;
    // attribute HLAobjectInstancesThatCanBeDeleted : HLAcount
    rti1516ev::HLAinteger32BE mHLAobjectInstancesThatCanBeDeletedEncoder;
    // attribute HLAobjectInstancesUpdated : HLAcount
    rti1516ev::HLAinteger32BE mHLAobjectInstancesUpdatedEncoder;
    // attribute HLAobjectInstancesReflected : HLAcount
    rti1516ev::HLAinteger32BE mHLAobjectInstancesReflectedEncoder;
    // attribute HLAobjectInstancesDeleted : HLAcount
    rti1516ev::HLAinteger32BE mHLAobjectInstancesDeletedEncoder;
    // attribute HLAobjectInstancesRemoved : HLAcount
    rti1516ev::HLAinteger32BE mHLAobjectInstancesRemovedEncoder;
    // attribute HLAobjectInstancesRegistered : HLAcount
    rti1516ev::HLAinteger32BE mHLAobjectInstancesRegisteredEncoder;
    // attribute HLAobjectInstancesDiscovered : HLAcount
    rti1516ev::HLAinteger32BE mHLAobjectInstancesDiscoveredEncoder;
    // attribute HLAtimeGrantedTime : HLAmsec
    rti1516ev::HLAinteger32BE mHLAtimeGrantedTimeEncoder;
    // attribute HLAtimeAdvancingTime : HLAmsec
    rti1516ev::HLAinteger32BE mHLAtimeAdvancingTimeEncoder;
    // attribute HLAconveyRegionDesignatorSets : HLAswitch
    rti1516ev::HLAinteger32BE mHLAconveyRegionDesignatorSetsEncoder;
    // attribute HLAconveyProducingFederate : HLAswitch
    rti1516ev::HLAinteger32BE mHLAconveyProducingFederateEncoder;
};

class HLAfederation : public HLAmanager
{
  public:
    HLAfederation();
    ~HLAfederation() = default;
    HLAfederation(const HLAfederation&) = delete;
    HLAfederation(HLAfederation&&) = delete;
    HLAfederation& operator=(const HLAfederation&) = delete;
    HLAfederation& operator=(HLAfederation&&) = delete;

    // attribute HLAfederationName : HLAunicodeString
    std::wstring GetHLAfederationName() const;
    void SetHLAfederationName(std::wstring newValue);
    // attribute HLAfederatesInFederation : HLAhandleList
    std::vector<rti1516ev::HLAhandle> GetHLAfederatesInFederation() const;
    void SetHLAfederatesInFederation(std::vector<rti1516ev::HLAhandle> newValue);
    // attribute HLARTIversion : HLAunicodeString
    std::wstring GetHLARTIversion() const;
    void SetHLARTIversion(std::wstring newValue);
    // attribute HLAMIMdesignator : HLAunicodeString
    std::wstring GetHLAMIMdesignator() const;
    void SetHLAMIMdesignator(std::wstring newValue);
    // attribute HLAFOMmoduleDesignatorList : HLAmoduleDesignatorList
    std::vector<std::wstring> GetHLAFOMmoduleDesignatorList() const;
    void SetHLAFOMmoduleDesignatorList(std::vector<std::wstring> newValue);
    // attribute HLAcurrentFDD : HLAunicodeString
    std::wstring GetHLAcurrentFDD() const;
    void SetHLAcurrentFDD(std::wstring newValue);
    // attribute HLAtimeImplementationName : HLAunicodeString
    std::wstring GetHLAtimeImplementationName() const;
    void SetHLAtimeImplementationName(std::wstring newValue);
    // attribute HLAlastSaveName : HLAunicodeString
    std::wstring GetHLAlastSaveName() const;
    void SetHLAlastSaveName(std::wstring newValue);
    // attribute HLAlastSaveTime : HLAlogicalTime
    std::vector<uint8_t> GetHLAlastSaveTime() const;
    void SetHLAlastSaveTime(std::vector<uint8_t> newValue);
    // attribute HLAnextSaveName : HLAunicodeString
    std::wstring GetHLAnextSaveName() const;
    void SetHLAnextSaveName(std::wstring newValue);
    // attribute HLAnextSaveTime : HLAlogicalTime
    std::vector<uint8_t> GetHLAnextSaveTime() const;
    void SetHLAnextSaveTime(std::vector<uint8_t> newValue);
    // attribute HLAautoProvide : HLAswitch
    HLAswitch GetHLAautoProvide() const;
    void SetHLAautoProvide(HLAswitch newValue);
  private:
    // attribute HLAfederationName : HLAunicodeString
    rti1516ev::HLAunicodeString mHLAfederationNameEncoder;
    // attribute HLAfederatesInFederation : HLAhandleList
    HLAhandleListEncoding mHLAfederatesInFederationEncoder;
    // attribute HLARTIversion : HLAunicodeString
    rti1516ev::HLAunicodeString mHLARTIversionEncoder;
    // attribute HLAMIMdesignator : HLAunicodeString
    rti1516ev::HLAunicodeString mHLAMIMdesignatorEncoder;
    // attribute HLAFOMmoduleDesignatorList : HLAmoduleDesignatorList
    HLAmoduleDesignatorListEncoding mHLAFOMmoduleDesignatorListEncoder;
    // attribute HLAcurrentFDD : HLAunicodeString
    rti1516ev::HLAunicodeString mHLAcurrentFDDEncoder;
    // attribute HLAtimeImplementationName : HLAunicodeString
    rti1516ev::HLAunicodeString mHLAtimeImplementationNameEncoder;
    // attribute HLAlastSaveName : HLAunicodeString
    rti1516ev::HLAunicodeString mHLAlastSaveNameEncoder;
    // attribute HLAlastSaveTime : HLAlogicalTime
    HLAlogicalTimeEncoding mHLAlastSaveTimeEncoder;
    // attribute HLAnextSaveName : HLAunicodeString
    rti1516ev::HLAunicodeString mHLAnextSaveNameEncoder;
    // attribute HLAnextSaveTime : HLAlogicalTime
    HLAlogicalTimeEncoding mHLAnextSaveTimeEncoder;
    // attribute HLAautoProvide : HLAswitch
    rti1516ev::HLAinteger32BE mHLAautoProvideEncoder;
};

 

} // namespace OpenRTI
} // namespace Mom
